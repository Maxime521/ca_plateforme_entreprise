// prisma/schema.prisma - Enhanced User Model
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  uid               String   @unique  // Firebase UID
  email             String   @unique
  displayName       String?
  photoURL          String?
  role              String   @default("user")  // "admin" or "user"
  permissions       String?  @default("{}")   // JSON string for granular permissions
  lastLoginAt       DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  
  // Role-specific settings
  searchPreferences String?  @default("{}")   // JSON for user search preferences
  allowedFeatures   String?  @default("[]")   // JSON array of allowed features
  
  @@map("users")
}

// Other existing models remain the same...
model Company {
  id                    String   @id @default(cuid())
  siren                 String   @unique
  denomination          String
  dateCreation          DateTime?
  dateImmatriculation   DateTime?
  active                Boolean  @default(true)
  adresseSiege          String?
  natureEntreprise      String?
  formeJuridique        String?
  codeAPE               String?
  libelleAPE            String?
  capitalSocial         Float?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  
  documents             Document[]
  financialRatios       FinancialRatio[]
  
  @@map("companies")
}

model Document {
  id                String   @id @default(cuid())
  companyId         String
  datePublication   DateTime
  typeDocument      String
  source            String
  typeAvis          String?
  reference         String?
  description       String?
  contenu           String?
  lienDocument      String?
  createdAt         DateTime @default(now())
  
  company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  @@map("documents")
}

model FinancialRatio {
  id                String   @id @default(cuid())
  companyId         String
  year              Int
  ratioType         String
  value             Float
  createdAt         DateTime @default(now())
  
  company           Company  @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  @@map("financial_ratios")
}
